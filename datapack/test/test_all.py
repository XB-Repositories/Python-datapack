from datapack import attributes as att
from datapack import dataset as dat
from datapack import plots as pl
import pandas as pd

#Tests the main functionalities of the datapack package.
def test_all():
    data = pd.DataFrame({"A":[1,4,3,5,2],"B":[4.3,2.1,2.3,9.8,1.5],"C":[1,1,1,2,1],"D":["a","b","b","a","c"],"E":["x","y","z","x","x"],"F":[True,True,False,False,True]})
    print("LOAD DATASET:")
    MyDataset = dat.Dataset(data,"F")
    MyDataset.print_dataset()
    print("----------------------------------------------------")
    print("ADD A NEW ATTRIBUTE AND CONVERT IT TO CATEGORICAL:")
    MyDataset.add_attribute("G",["t","f","f","f","t"])
    MyDataset.to_categorical_attribute("G",values=["t","f"])
    MyDataset.get_attribute("G").print_data()
    print("----------------------------------------------------")
    print("REMOVE AN ATTRIBUTE:")
    MyDataset.remove_attribute("E")
    MyDataset.print_dataset()
    print("----------------------------------------------------")
    print("VARIANCE OF THE NUMERICAL ATTRIBUTES:")
    print(MyDataset.variance_att())
    print("----------------------------------------------------")
    print("MEAN OF THE NUMERICAL ATTRIBUTES:")
    print(MyDataset.mean_att())
    print("----------------------------------------------------")
    print("MEDIAN OF THE NUMERICAL ATTRIBUTES:")
    print(MyDataset.median_att())
    print("----------------------------------------------------")
    print("ENTROPY OF THE NON-NUMERICAL ATTRIBUTES:")
    print(MyDataset.entropy_att())
    print("----------------------------------------------------")
    print("MODE OF THE NON-NUMERICAL ATTRIBUTES:")
    print(MyDataset.mode_att())
    print("----------------------------------------------------")
    print("ROC AUC WHEN USING EACH NUMERICAL ATTRIBUTE TO PREDICT THE CLASS:")
    print(MyDataset.roc_auc_att())
    print("PLOT ROC CURVE FOR THE SECOND FIRST ATTRIBUTE:")
    pl.plot_roc(MyDataset,"A")
    print("----------------------------------------------------")
    print("PEARSON CORRELATION BETWEEN THE NUMERICAL ATTRIBUTES:")
    print(MyDataset.correlation_att(method="pearson"))
    print("PLOT PEARSON CORRELATION MATRIX:")
    pl.plot_correlation(MyDataset,method="pearson")
    print("----------------------------------------------------")
    print("NORMALIZED MUTUAL INFORMATION BETWEEN NON-NUMERICAL ATTRIBUTES:")
    print(MyDataset.norm_mutual_info_att())
    print("PLOT NORMALIZED MUTUAL INFORMATION MATRIX:")
    pl.plot_norm_mutual_info(MyDataset)
    print("----------------------------------------------------")
    print("STANDARIZE THE FIRST NUMERIC VARIABLE:")
    MyDataset.attributes["A"].standarize()
    MyDataset.attributes["A"].print_data()
    print("----------------------------------------------------")
    print("NORMALIZE THE SECOND NUMERIC VARIABLE:")
    MyDataset.attributes["B"].normalize()
    MyDataset.attributes["B"].print_data()
    print("----------------------------------------------------")
    print("DISCRETIZE ALL THE NUMERIC VARIABLES USING AN EQUAL-WIDTH APPROACH WITH 3 INTERVALS:")
    MyDataset.discretize_att(3,"width")
    MyDataset.print_dataset()
    print("----------------------------------------------------")
    print("FILTER THE NON-NUMERICAL ATTRIBUTES ACCORDING TO ENTROPY:")
    MyDataset.filter_by("entropy","gt",1.5)
    MyDataset.print_dataset()
